// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// =============== MODELS ===============
// User Model
model User {
  id          Int       @id @default(autoincrement())
  firstname   String
  lastname    String?
  username    String?   @unique
  bio         String?
  email       String    @unique
  password    String?
  dateOfBirth DateTime?
  // add DOB + Phone number as User Schema Req
  // data relations with external models
  tweets      Tweet[]
  Comment     Comment[]
  Like        Like[]
  messages    Message[]
  friends     Friend[]
}

model Tweet {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  description String
  category    String?
  author      User      @relation(fields: [authorId], references: [id])
  authorId    Int
  // data relations with external models
  comments    Comment[]
  likes       Like[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  tweetId   Int
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  //value optional - used for testing
  value     Int      @default(1)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  tweetId   Int
}

model Message {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  friend      Friend   @relation(fields: [userId], references: [id])
  friendId    Int
  description String

}

model Friend {
  id      Int       @id @default(autoincrement())
  user    User      @relation(fields: [userId], references: [id])
  userId  Int
  Message Message[]
}
